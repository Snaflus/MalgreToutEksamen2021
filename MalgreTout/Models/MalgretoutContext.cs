// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace MalgreTout.Models
{
    public partial class MalgretoutContext : DbContext
    {
        public MalgretoutContext()
        {
        }

        public MalgretoutContext(DbContextOptions<MalgretoutContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AntalMagasiner> AntalMagasiners { get; set; }
        public virtual DbSet<Kontaktpersoner> Kontaktpersoners { get; set; }
        public virtual DbSet<Lokationer> Lokationers { get; set; }
        public virtual DbSet<Åbningerstider> Åbningerstiders { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=MalgreTout;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<AntalMagasiner>(entity =>
            {
                entity.HasKey(e => e.LokationId)
                    .HasName("PK__Antal_ma__2E6900926824188C");

                entity.Property(e => e.LokationId).ValueGeneratedNever();

                entity.HasOne(d => d.Lokation)
                    .WithOne(p => p.AntalMagasiner)
                    .HasForeignKey<AntalMagasiner>(d => d.LokationId)
                    .HasConstraintName("FK__Antal_mag__Lokat__55F4C372");
            });

            modelBuilder.Entity<Kontaktpersoner>(entity =>
            {
                entity.HasKey(e => e.KontaktId)
                    .HasName("PK__Kontaktp__68E9980514075239");

                entity.Property(e => e.Email).IsUnicode(false);

                entity.Property(e => e.Kontaktperson).IsUnicode(false);

                entity.Property(e => e.Telefonnummer).IsUnicode(false);

                entity.HasOne(d => d.Lokation)
                    .WithMany(p => p.Kontaktpersoners)
                    .HasForeignKey(d => d.LokationId)
                    .HasConstraintName("FK__Kontaktpe__Lokat__58D1301D");
            });

            modelBuilder.Entity<Lokationer>(entity =>
            {
                entity.HasKey(e => e.LokationId)
                    .HasName("PK__Lokation__2E6900928DB1BAF4");

                entity.Property(e => e.Adresse).IsUnicode(false);

                entity.Property(e => e.Firmanavn).IsUnicode(false);

                entity.Property(e => e.Telefonnummer).IsUnicode(false);
            });

            modelBuilder.Entity<Åbningerstider>(entity =>
            {
                entity.HasKey(e => e.LokationId)
                    .HasName("PK__Åbninger__2E6900921D6CE693");

                entity.Property(e => e.LokationId).ValueGeneratedNever();

                entity.Property(e => e.Åbningstider).IsUnicode(false);

                entity.HasOne(d => d.Lokation)
                    .WithOne(p => p.Åbningerstider)
                    .HasForeignKey<Åbningerstider>(d => d.LokationId)
                    .HasConstraintName("FK__Åbningers__Lokat__531856C7");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}