// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace MalgreTout.Models
{
    public partial class MalgretoutContext : DbContext
    {
        public MalgretoutContext()
        {
        }

        public MalgretoutContext(DbContextOptions<MalgretoutContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Contactperson> Contactpeople { get; set; }
        public virtual DbSet<DistributionPoint> DistributionPoints { get; set; }
        public virtual DbSet<NoOfMagazine> NoOfMagazines { get; set; }
        public virtual DbSet<OpeningHour> OpeningHours { get; set; }
        public virtual DbSet<Zipcode> Zipcodes { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=MalgreTout;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Contactperson>(entity =>
            {
                entity.HasKey(e => e.ContactId)
                    .HasName("PK__Contactp__82ACC1CD9AF4750F");

                entity.Property(e => e.Contactperson1).IsUnicode(false);

                entity.Property(e => e.Email).IsUnicode(false);

                entity.Property(e => e.Phone).IsUnicode(false);

                //entity.HasOne(d => d.Location)
                //    .WithMany(p => p.Contactpeople)
                //    .HasForeignKey(d => d.LocationId)
                //    .HasConstraintName("FK__Contactpe__Locat__336AA144");
            });

            modelBuilder.Entity<DistributionPoint>(entity =>
            {
                entity.HasKey(e => e.LocationId)
                    .HasName("PK__Distribu__D2BA00C21BD2503D");

                entity.Property(e => e.Address).IsUnicode(false);

                entity.Property(e => e.Company).IsUnicode(false);

                entity.HasOne(d => d.ZipcodeNavigation)
                    .WithMany(p => p.DistributionPoints)
                    .HasForeignKey(d => d.Zipcode)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Distribut__Zipco__2AD55B43");
            });

            modelBuilder.Entity<NoOfMagazine>(entity =>
            {
                entity.HasKey(e => e.MagasineId)
                    .HasName("PK__No_of_ma__3AD34079A6293673");

                //entity.HasOne(d => d.Location)
                //    .WithMany(p => p.NoOfMagazines)
                //    .HasForeignKey(d => d.LocationId)
                //    .HasConstraintName("FK__No_of_mag__Locat__308E3499");
            });

            modelBuilder.Entity<OpeningHour>(entity =>
            {
                entity.HasKey(e => e.OpeningId)
                    .HasName("PK__Opening___F48914FF71BC8977");

                entity.Property(e => e.OpenHours).IsUnicode(false);

                entity.Property(e => e.WeekDay).IsUnicode(false);

                //entity.HasOne(d => d.Location)
                //    .WithMany(p => p.OpeningHours)
                //    .HasForeignKey(d => d.LocationId)
                //    .HasConstraintName("FK__Opening_h__Locat__2DB1C7EE");
            });

            modelBuilder.Entity<Zipcode>(entity =>
            {
                entity.HasKey(e => e.Zipcode1)
                    .HasName("PK__Zipcode__E546D6BFA7B0B168");

                entity.Property(e => e.Zipcode1).ValueGeneratedNever();

                entity.Property(e => e.City).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}